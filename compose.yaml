volumes:
  mapas_logs:
    name: mapas_logs
  pgdata_mapas:
    name: pgdata_mapas
    driver: local
  backend_mapas:
    name: backend_mapas
  cache_maven:
    name: cache_maven

networks:
  mapas_net:
    name: mapas_net
    driver: bridge
    external: false

services:
  mapas_db:
    image: ${POSTGRES_IMAGE:-postgis/postgis:latest}
    container_name: mapas_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_NAME:-mapas}
      PGDATA: /data/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: password
    volumes:
      - pgdata_mapas:/data/lib/postgresql/data/pgdata
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${DB_PORT:-5433}:5432
    networks:
      - mapas_net
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1.5"

  api:
    env_file:
      - .env
    build:
      context: .
    container_name: api
    deploy:
      resources:
        limits:
          memory: 3G
    ports:
      - ${SERVER_PORT:-80}:${SERVER_PORT:-80}
    depends_on:
      - mapas_db
    environment:
      JAVA_OPTS: -Xms1g -Xmx2g
      POSTGRES_SERVER: mapas_db
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_NAME: ${POSTGRES_NAME:-mapas}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./src/main/resources/templates:/templates
      - ./src/main/resources/static:/static
      - mapas_logs:/data/logs/mapas
      - backend_mapas:/assets
      - cache_maven:/root/.m2
    command: mvn clean package -DskipTests
    networks:
      - mapas_net
    restart: always
