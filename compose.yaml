version: "3.8"

networks:
  net4mapas:
    name: net4${POSTGRES_NAME:-mapas}
    driver: bridge

services:

  api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile-spring
    #    image: benefrancis/mapas:latest
    container_name: api4${POSTGRES_NAME:-mapas} # Utilizando a variável de ambiente e um valor padrão caso ela não exista
    deploy:
      resources:
        limits:
          memory: 3G
    ports:
      - ${SERVER_PORT:-80}:${SERVER_PORT:-80}
    depends_on:
      - db
    environment:
      JAVA_OPTS: -Xms1g -Xmx2g
      POSTGRES_SERVER: db
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_NAME: ${POSTGRES_NAME:-mapas}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./src/main/resources/templates:/templates
      - ./src/main/resources/static:/static
      - f:/${POSTGRES_NAME:-mapas}/logs:/data/logs/mapas
      - f:/${POSTGRES_NAME:-mapas}/assets:/assets
    command: java -jar /app/mapas.jar # Comando para iniciar sua aplicação
    networks:
      - net4${POSTGRES_NAME:-mapas}
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-80}/actuator/health" ] #Healthcheck para sua aplicação
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  geoserver:
    image: geosolutionsit/geoserver:2.26.x
    container_name: geoserver4${POSTGRES_NAME:-mapas}  # Utilizando a variável de ambiente e um valor padrão caso ela não exista
    restart: always
    environment:
      POSTGRES_JNDI_ENABLED: false
      POSTGRES_HOST: db # ajuste para db, que é o nome do container na rede docker
      POSTGRES_PORT: 5432
      POSTGRES_DB: mapas
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      GEOSERVER_ADMIN_USERNAME: ${GEOSERVER_ADMIN_USERNAME:-admin} # Troque esta senha
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD:-geoserver} # Troque esta senha
      GEOSERVER_LOG_DIR: /var/log/geoserver
      GEOSERVER_DATA_DIR: /var/lib/geoserver_data
      GEOWEBCACHE_CONFIG_DIR: /var/lib/geowebcache/config
      GEOWEBCACHE_CACHE_DIR: /var/lib/geowebcache/cache
      NETCDF_DATA_DIR: /var/lib/netcdf
      GRIB_CACHE_DIR: /var/lib/grib
      ALLOWED_ORIGINS: http://localhost,http://territoriostradicionais.mpf.mp.br,https://territoriostradicionais.mpf.mp.br # Suas origens permitidas
    volumes:
      - f:/${POSTGRES_NAME:-mapas}/logs:/var/log/geoserver
      - f:/${POSTGRES_NAME:-mapas}/datadir:/var/lib/geoserver_data
      - f:/${POSTGRES_NAME:-mapas}/gwc_config:/var/lib/geowebcache/config
      - f:/${POSTGRES_NAME:-mapas}/gwc:/var/lib/geowebcache/cache
      - f:/${POSTGRES_NAME:-mapas}/netcfd:/var/lib/netcdf
      - f:/${POSTGRES_NAME:-mapas}/grib_cache:/var/lib/grib
      - ./context.xml:/opt/tomcat/conf/Catalina/localhost/geoserver.xml # mapeamento para o seu context.xml
      #      - ./web.xml:/opt/tomcat/webapps/geoserver/WEB-INF/web.xml
      - ./web.xml.template:/opt/tomcat/webapps/geoserver/WEB-INF/web.xml.template
      - ./geoinit.sh:/docker-entrypoint-initdb.d/geoinit.sh

    ports:
      - "8888:8080"
    networks:
      - net4${POSTGRES_NAME:-mapas}
    depends_on:
      - db
    command: [ "catalina.sh", "run" ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/geoserver/rest/about/status" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  
  
  #  FROM postgis/postgis:15-3.3
  #
  #  # Muda para o usuário root para poder instalar pacotes
  #  USER root
  #
  #  # Atualiza os repositórios e reinstala os pacotes do postgis que garantem a disponibilidade do shp2pgsql
  #  RUN apt-get update && apt-get --reinstall install -y postgis postgresql-15-postgis-3 && rm -rf /var/lib/apt/lists/*
  #
  #  # Volta para o usuário postgres (opcional, mas recomendado)
  #  USER postgres




  db:
    build:
      context: .
      dockerfile: Dockerfile-postgis
    container_name: db4${POSTGRES_NAME:-mapas}
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mapas
    ports:
      - "5433:5432"
    volumes:
      - f:/${POSTGRES_NAME:-mapas}/data_pg:/var/lib/postgresql/data
    networks:
      - net4${POSTGRES_NAME:-mapas}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq4${POSTGRES_NAME:-mapas}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - net4${POSTGRES_NAME:-mapas}
    volumes:
      - ./rabbitmq_setup.sh:/docker-entrypoint-initdb.d/rabbitmq_setup.sh
      - ./erlang.config:/etc/rabbitmq/erlang.config
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u", "rabitmq:rabitmq", "http://localhost:15672/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      RABBITMQ_ADVANCED_CONFIG: |
        [
          {deprecated_features, [{permit, [{management_metrics_collection, true}]}]}
        ].
      ERL_FLAGS: "+S 1 +K true +A30 +Bc16384 --enable-feature all"

  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus4${POSTGRES_NAME:-mapas}
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - net4${POSTGRES_NAME:-mapas}
    depends_on:
      - geoserver
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/-/healthy" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  grafana:
    image: grafana/grafana:9.1.7
    container_name: grafana4${POSTGRES_NAME:-mapas}
    ports:
      - "3000:3000"
    volumes:
      - f:/${POSTGRES_NAME:-mapas}/grafana_data:/var/lib/grafana
    networks:
      - net4${POSTGRES_NAME:-mapas}
    depends_on:
      - prometheus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s